package org.nia.logic;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;

/**
 * @author IANazarov
 */
public enum Location {
    TAVERN(),
    POTATO("Михалыч попросил тебя помочь ему вскопать картошку. Делать нечего, ты берешь лопату и идешь совершать трудовой подвиг."
            , "На огороде ты увидел колорадского жука размером с лошадь. Жуку ты понравился и он не стал тебя есть.\n" +
            "Хорошо, что перед этим ты успел выпить в таверне! Расхрабрившись, " +
            "ты начал дразнить жука и в итоге увел его в соседний огород. Теперь это не твоя поблема."
            , "Ты пахал как лошадь - и теперь ты знаешь как выглядит картошка. Достойно настоящего героя!"
            , "На огороде ты увидел колорадского жука размером с лошадь. Ты храбро атаковал его, и жук был вынужден " +
            "бежать от твоего праведного гнева."
            , "Ты пахал как лошадь. Потом пришел Михалыч и сказал что ты копаешь на огороде Семеныча. Впрочем, с " +
            "Семенычем удалось договориться и твой труд был конвертирован в валюту."
            , "Ты пришел на огород и увидел там растущие грибы. Пока ты копал картошку, грибы выкопались, достали " +
            "откуда-то острые предметы похожие на смесь бензопилы и топора и попытались тебя ограбить. Ты успешно от них отбился."),
    BUY_FISH("Михалыч попросил тебя купить рыбу на рынке."
            , "На рынке твоё внимание привлек карлик-торговец, стоящий " +
            "рядом с кучей чего-то, похожего на дерьмо:\n- Драконье мясо, недорого! Эй, путник, купи драконьего мяса! " +
            "Что, тебе нужна рыба? Ну смотри, у дракона чешуя, и у рыб чешуя, выходит что дракон это рыба! - убедил " +
            "тебя карлик - Мы, путники, не обманываем друг друга!\nВыданной Михалычем мелочи хватило на один ломтик " +
            "драконьего мяса. Довольный выгодной сделкой, ты вернулся к Михалычу."
            , "На рынке тебе удалось спереть рыбину с прилавка. На выданные Михалычем деньги ты покатался на карусели."
            , "Ты купил щуку. Пока ты шел назад к Михалычу, щука начала с тобой разговаривать. Ты решил, что надо пить поменьше, " +
            "но на всякий случай вырубил щуку ударом о ближайший забор."
            , "На рынке ты купил черепаху. Она угрожала что тебя найдет какой-то черно-белый медведь и отомстит за нее."
            , "Ты решил наловить рыбы сам, а деньги Михалыча забрать себе. На рыбалке тебе разморило и ты заснул, а " +
            "когда очнулся обнаружил что к твоим пожиткам приделали ноги. Ты потерял удочку, деньги, сапоги и всю наловленную рыбу... " +
            "зато в кармане ты обнаружил лягушку. Напоив Михалыча, тебе удалось убедить его что лягушка - тоже рыба."),
    GRANDMA_ROAD("Михалыч сказал что видел за городом старушку, которая никак не может перейти дорогу, и попросил тебя помочь ей."
            , "Дойдя до обозначенного Михалычем места, ты и правда увидел бабулю с клюкой."
            , "Дойдя до обозначенного Михалычем места, ты увидел указатель с надписью \"Бабуля - 10км на юг\". Пройдя в указанном " +
            "направлении, ты увидел еще один указатель \"Бабуля - 3км на запад вдоль реки\".\nПройдя 3км, ты увидел женщину-огра, " +
            "которая попыталась тебя ограбить. Тебе удалось спастись бегством."
            , "На дороге бабули не оказалось, зато оказался дедуля. Ты перевел его через дорогу."
            , "Бабуля отказалась от твоей помощи. И не таких обламывали! - подумал ты и, связав бабулю, перетащил её через дорогу."
            , "Пока ты переводил бабулю, ты обратил внимание на её странную внешность.\n- Бабуля, почему у тебя такие большие уши?" +
            ", - спросил ты.\nБабуля сняла капюшон и ты понял что перед тобой стоит эльфийская Видящая. Она предупредила тебя напоследок:\n" +
            "- Не пей мордор, орком станешь!");
    private String text;
    private List<String> result;
    private boolean quest;

    Location(String text, String... result) {
        this.text = text;
        this.result = Arrays.asList(result);
        quest = true;
    }

    Location() {
        text = "";
        result = Collections.emptyList();
        quest = false;
    }

    public boolean isQuest() {
        return quest;
    }

    public static Location getRandomQuest() {
        List<Location> list = Arrays.stream(values()).filter(Location::isQuest).collect(Collectors.toList());
        return list.get(new Random().nextInt(list.size()));
    }

    public String getText() {
        return text;
    }

    public String getResult() {
        if (result.isEmpty()) {
            return "";
        } else {
            return result.get(new Random().nextInt(result.size()));
        }
    }
}
